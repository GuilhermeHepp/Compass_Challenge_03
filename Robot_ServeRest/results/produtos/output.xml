<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.13.5 on win32)" generated="20251003 14:36:35.792" rpa="false" schemaversion="4">
<suite id="s1" name="Product Test" source="C:\Users\ghepp\Compass_Challenge_03\Robot_ServeRest\tests\product_test.robot">
<test id="s1-t1" name="Fluxo de Produtos" line="12">
<kw name="Setup para Testes Autenticados" library="common_keyword" type="SETUP">
<kw name="Setup Test Session" library="common_keyword">
<kw name="Create Session" library="RequestsLibrary">
<arg>${API_SESSION}</arg>
<arg>${BASE_URL}</arg>
<arg>timeout=${TIMEOUT}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20251003 14:36:36.005" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=120, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20251003 14:36:36.004" endtime="20251003 14:36:36.005"/>
</kw>
<status status="PASS" starttime="20251003 14:36:36.004" endtime="20251003 14:36:36.005"/>
</kw>
<kw name="Fazer Login e Salvar Token" library="login_keyword">
<var>${response}</var>
<arg>${EMAIL_ADMIN}</arg>
<arg>${USER_ADMIN.password}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20251003 14:36:36.006" level="INFO">${body} = {'email': 'admin-nsrrzofv@qa.com', 'password': 'senhaforte'}</msg>
<status status="PASS" starttime="20251003 14:36:36.005" endtime="20251003 14:36:36.006"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/login</arg>
<arg>json=${body}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20251003 14:36:36.483" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '60', 'Content-Type': 'application/json'} 
 body=b'{"email": "admin-nsrrzofv@qa.com", "password": "senhaforte"}' 
 </msg>
<msg timestamp="20251003 14:36:36.483" level="INFO">POST Response : url=https://serverest.dev/login 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '243f11d788a4f288b69626e9aba82782', 'date': 'Fri, 03 Oct 2025 17:36:34 GMT', 'server': 'Google Frontend', 'Content-Length': '283'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluLW5zcnJ6b2Z2QHFhLmNvbSIsInBhc3N3b3JkIjoic2VuaGFmb3J0ZSIsImlhdCI6MTc1OTUxMjk5NCwiZXhwIjoxNzU5NTEzNTk0fQ.2sMFwTj_397vH__taUMEl117_GVAiAdMcZLoEEwJ7oI"
} 
 </msg>
<msg timestamp="20251003 14:36:36.483" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251003 14:36:36.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20251003 14:36:36.006" endtime="20251003 14:36:36.484"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${auth_header}</var>
<arg>${response.json()['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20251003 14:36:36.484" level="INFO">${auth_header} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluLW5zcnJ6b2Z2QHFhLmNvbSIsInBhc3N3b3JkIjoic2VuaGFmb3J0ZSIsImlhdCI6MTc1OTUxMjk5NCwiZXhwIjoxNzU5NTEzNTk0fQ.2sMFwTj_397vH__taUMEl117_GVAiAdMc...</msg>
<status status="PASS" starttime="20251003 14:36:36.484" endtime="20251003 14:36:36.485"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${AUTH_HEADER}</arg>
<arg>${auth_header}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251003 14:36:36.485" level="INFO">${AUTH_HEADER} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluLW5zcnJ6b2Z2QHFhLmNvbSIsInBhc3N3b3JkIjoic2VuaGFmb3J0ZSIsImlhdCI6MTc1OTUxMjk5NCwiZXhwIjoxNzU5NTEzNTk0fQ.2sMFwTj_397vH__taUMEl117_GVAiAdMc...</msg>
<status status="PASS" starttime="20251003 14:36:36.485" endtime="20251003 14:36:36.485"/>
</kw>
<msg timestamp="20251003 14:36:36.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20251003 14:36:36.005" endtime="20251003 14:36:36.485"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${response.json()}</arg>
<arg>authorization</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251003 14:36:36.485" endtime="20251003 14:36:36.486"/>
</kw>
<status status="PASS" starttime="20251003 14:36:36.004" endtime="20251003 14:36:36.486"/>
</kw>
<kw name="Listar produtos e validar schema" library="product_keyword">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/produtos</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20251003 14:36:36.791" level="INFO">GET Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20251003 14:36:36.791" level="INFO">GET Response : url=https://serverest.dev/produtos 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '5044c318189ea1a3b69626e9aba8203c', 'date': 'Fri, 03 Oct 2025 17:36:34 GMT', 'server': 'Google Frontend', 'Content-Length': '24956'} 
 body={
    "quantidade": 112,
    "produtos": [
        {
            "nome": "Modern Marble Fish",
            "preco": 500,
            "descricao": "The pink Bacon combines Azerbaijan aesthetics with Vanadium-based durability",
            "quantidade": 0,
            "_id": "0VwBL49CHea6b5M5"
        },
        {
            "nome": "Gorgeous Cotton Salad",
            "preco": 500,
            "descricao": "The sky blue Shoes combines Argentina aesthetics with Ytterbium-based durability",
            "quantidade": 10,
            "_id": "0mDKMb7QO3kIlHbp"
        },
        {
            "nome": "Incredible Plastic Chair",
            "preco": 1600,
            "descricao": "Experience the red brilliance of our Ball, perfect for outlying environments",
            "quantidade": 18,
            "_id": "0vqYofPyQno2wAAb"
        },
        {
            "nome": "#(updatedUserData) 'EDITADO'",
            "preco": 100,
            "descricao": "Produto de teste automatizado",
            "quantidade": 10,
            "_id": "1JvqsKfuUiR4ESi9"
        },
        {
            "nome": "Luxurious Rubber Chips",
            "preco": 500,
            "descricao": "The mint green Keyboard combines Oman aesthetics with Lead-based durability",
            "quantidade": 10,
            "_id": "2ZMP6yPfMEPGhPjj"
        },
        {
            "nome": "Refined Ceramic Chips",
            "preco": 500,
            "descricao": "New azure Shirt with ergonomic design for sour comfort",
            "quantidade": 0,
            "_id": "43zxbQkKY4ZWuESV"
        },
        {
            "nome": "Electronic Bronze Soap",
            "preco": 1600,
            "descricao": "Our bitter-inspired Chicken brings a taste of luxury to your minor lifestyle",
            "quantidade": 18,
            "_id": "4yrRoXCimiY2UkUj"
        },
        {
            "nome": "Produto Karate 42sd",
            "preco": 100,
            "descricao": "Produto de teste automatizado",
            "quantidade": 10,
            "_id": "5rl9MIw1LAUHTLcd"
        },
        {
            "nome": "Produto Karate b95l",
            "preco": 100,
            "descricao": "Produto de teste automatizado",
            "quantidade": 10,
            "_id": "68luvtlEOicGZsA8"
        },
        {
            "nome": "Produto Teste HIL",
            "preco": 100,
            "descricao": "Descrição teste",
            "quantidade": 50,
            "_id": "710kku6zTdlyuRH4"
        },
        {
            "nome": "Awesome Rubber Towels",
            "preco": 500,
            "descricao": "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
            "quantidade": 0,
            "_id": "7lm01w1eqBYuTjUV"
        },
        {
            "nome": "GXMEuZ7nj4",
            "preco": 250,
            "descricao": "Descrição do produto novo",
            "quantidade": 100,
            "_id": "85pK8ceQM69X1lIs"
        },
        {
            "nome": "Produto PUT 1759510969",
            "preco": 150,
            "descricao": "Descrição PUT",
            "quantidade": 5,
            "_id": "86FKuhlKF0zG34mO"
        },
        {
            "nome": "Produto PUT 1759511393",
            "preco": 150,
            "descricao": "Descrição PUT",
            "quantidade": 5,
            "_id": "8ftFAUfc4mjszNe8"
        },
        {
            "nome": "#(updatedUserData)+ 'adetado'",
            "preco": 100,
            "descricao": "Produto de teste automatizado",
            "quantidade": 10,
            "_id": "97nGosfmDQ8TDLzE"
        },
        {
            "nome": "Produto Teste 1759511392",
            "preco": 100,
            "descricao": "Descrição teste",
            "quantidade": 10,
            "_id": "9rlxQvDtZcZ4I65w"
        },
        {
            "nome": "Produto Karate wt1f",
            "preco": 100,
            "descricao": "Produto de teste automatizado",
            "quantidade": 10,
            "_id": "AMQ2JI2aAQWkzYRC"
        },
        {
            "nome": "Produto Teste eHR",
            "preco": 100,
            "descricao": "Descrição teste",
            "quantidade": 48,
            "_id": "Ag5P85aVH5Cnh1LU"
        },
        {
            "nome": "EQUIsacJg4",
            "preco": 150,
            "descricao": "Desc",
            "quantidade": 48,
            "_id": "BR7AzHt2ZKLmTVUA"
        },
        {
            "nome": "Logitech MX Vertical",
            "preco": 470,
            "descricao": "Mouse",
            "quantidade": 382,
            "_id": "BeeJh5lz3k6kSIzA"
        },
        {
            "nome": "Produto Teste vus",
            "preco": 100,
            "descricao": "Descrição teste",
            "quantidade": 50,
            "_id": "Bv6dPkKNw0ODcCHa"
        },
        {
            "nome": "Gorgeous Cotton Fish",
            "preco": 1600,
            "descricao": "The plum Sausages combines Guinea aesthetics with Potassium-based durability",
            "quantidade": 18,
            "_id": "CPqgAogoevMbnBuq"
        },
        {
            "nome": "WF1dxJE0gdyx",
            "preco": 10,
            "descricao": "Produto Original",
            "quantidade": 10,
            "_id": "DLSVfhBKyuK3psjL"
        },
        {
            "nome": "dSvZgtsD3t8R",
            "preco": 10,
            "descricao": "Produto Original",
            "quantidade": 10,
            "_id": "EhQjDZFbiVi98DCP"
        },
        {
            "nome": "Produto_40401",
            "preco": 100,
            "descricao": "Descricao do produto teste",
            "quantidade": 9,
            "_id": "EpR2rdHkTmMQaD3H"
        },
        {
            "nome": "Produto Teste Karate",
            "preco": 100,
            "descricao": "Produto de teste automatizado",
            "quantidade": 10,
            "_id": "G9VuX7aBJNEKBwJ3"
        },
        {
            "nome": "Produto Karate w7z9",
            "preco": 100,
            "descricao": "Produto de teste automatizado",
            "quantidade": 10,
            "_id": "GCHdCFzQSkg5UcPN"
        },
        {
            "nome": "Produto Updatesw2h",
            "preco": 100,
            "descricao": "Produto de teste automatizado",
            "quantidade": 10,
            "_id": "Ggvz8um7BLey1tLT"
        },
        {
            "nome": "ZtvCk2itN8",
            "preco": 250,
            "descricao": "Descrição do produto novo",
            "quantidade": 100,
            "_id": "GjFOgxvyok7HN9A7"
        },
        {
            "nome": "Generic Silk Keyboard",
            "preco": 1600,
            "descricao": "The blue Shoes combines Afghanistan aesthetics with Radon-based durability",
            "quantidade": 18,
            "_id": "H7iYYM6OOxCplO23"
        },
        {
            "nome": "uYdMArylNH",
            "preco": 250,
            "descricao": "Descrição do produto novo",
            "quantidade": 100,
            "_id": "HIebYjJs3cwF8wMo"
        },
        {
            "nome": "Luxurious Bronze Sausages",
            "preco": 500,
            "descricao": "Experience the mint green brilliance of our Computer, perfect for whopping environments",
            "quantidade": 0,
            "_id": "HRXwgf263h3gGlbz"
        },
        {
            "nome": "Produto Teste qyr",
            "preco": 100,
            "descricao": "Descrição teste",
            "quantidade": 50,
            "_id": "I8fct5JPaUMijwSL"
        },
        {
            "nome": "Tasty Wooden Soap",
            "preco": 1600,
            "descricao": "The Face to face bifurcated capacity Bike offers reliable performance and naughty design",
            "quantidade": 18,
            "_id": "IRoTvQGSQZMk1DlF"
        },
        {
            "nome": "Produto Update81xw",
            "preco": 100,
            "descricao": "Produto de teste automatizado",
            "quantidade": 10,
            "_id": "IbEsy9T2fodFiXEy"
        },
        {
            "nome": "Licensed Metal Chair",
            "preco": 500,
            "descricao": "Stylish Salad designed to make you stand out with purple looks",
            "quantidade": 0,
            "_id": "J4Ve2wRG0jXTqpG4"
        },
        {
            "nome": "updatedUserData",
            "preco": 100,
            "descricao": "Produto de teste automatizado",
            "quantidade": 10,
            "_id": "JClehuNeNjeiSlR3"
        },
        {
            "nome": "Cypress Product 1759493975099",
            "preco": 10,
            "descricao": "Product Description",
            "quantidade": 10,
            "imagem": "C:\\fakepath\\image.jpg",
            "_id": "JNmyXc3uIhtP6XuK"
        },
        {
            "nome": "MVXYVNICJbe2",
            "preco": 10,
            "descricao": "Produto Original",
            "quantidade": 10,
            "_id": "JjorqIjvWHLUuBqw"
        },
        {
            "nome": "Samsung 60 polegadas",
            "preco": 5240,
            "descricao": "TV",
            "quantidade": 49977,
            "_id": "K6leHdftCeOJj8BJ"
        },
        {
            "nome": "nWC7ERsrEs8C",
            "preco": 10,
            "descricao": "Produto Original",
            "quantidade": 10,
            "_id": "KLqRAkNRibcpoBkX"
        },
        {
            "nome": "Produto Teste vGA",
            "preco": 100,
            "descricao": "Descrição teste",
            "quantidade": 50,
            "_id": "Kuyyj3ZNvJjVEX07"
        },
        {
            "nome": "Electronic Ceramic Fish",
            "preco": 500,
            "descricao": "Experience the ivory brilliance of our Car, perfect for glaring environments",
            "quantidade": 0,
            "_id": "L29sZ6pM36DNY1x8"
        },
        {
            "nome": "Produto Teste 1759510961",
            "preco": 100,
            "descricao": "Descrição do produto teste",
            "quantidade": 8,
            "_id": "MwhuiwdKP1KF1qVf"
        },
        {
          ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20251003 14:36:36.792" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251003 14:36:36.792" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20251003 14:36:36.486" endtime="20251003 14:36:36.792"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20251003 14:36:36.792" endtime="20251003 14:36:36.792"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_response}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20251003 14:36:36.793" level="INFO">${json_response} = {'quantidade': 112, 'produtos': [{'nome': 'Modern Marble Fish', 'preco': 500, 'descricao': 'The pink Bacon combines Azerbaijan aesthetics with Vanadium-based durability', 'quantidade': 0, '_id': '0VwB...</msg>
<status status="PASS" starttime="20251003 14:36:36.793" endtime="20251003 14:36:36.793"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${json_response}</arg>
<arg>quantidade</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251003 14:36:36.793" endtime="20251003 14:36:36.793"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${json_response}</arg>
<arg>produtos</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251003 14:36:36.794" endtime="20251003 14:36:36.794"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${primeiro_produto}</var>
<arg>${json_response['produtos']}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251003 14:36:36.794" level="INFO">${primeiro_produto} = {'nome': 'Modern Marble Fish', 'preco': 500, 'descricao': 'The pink Bacon combines Azerbaijan aesthetics with Vanadium-based durability', 'quantidade': 0, '_id': '0VwBL49CHea6b5M5'}</msg>
<status status="PASS" starttime="20251003 14:36:36.794" endtime="20251003 14:36:36.794"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${primeiro_produto}</arg>
<arg>nome</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251003 14:36:36.794" endtime="20251003 14:36:36.794"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${primeiro_produto}</arg>
<arg>preco</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251003 14:36:36.794" endtime="20251003 14:36:36.794"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${primeiro_produto}</arg>
<arg>descricao</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251003 14:36:36.794" endtime="20251003 14:36:36.795"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${primeiro_produto}</arg>
<arg>quantidade</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251003 14:36:36.795" endtime="20251003 14:36:36.795"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${primeiro_produto}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251003 14:36:36.795" endtime="20251003 14:36:36.795"/>
</kw>
<status status="PASS" starttime="20251003 14:36:36.486" endtime="20251003 14:36:36.795"/>
</kw>
<kw name="Cadastrar produto com sucesso" library="product_keyword">
<kw name="Create Dictionary" library="BuiltIn">
<var>${auth_headers}</var>
<arg>Authorization=${AUTH_HEADER}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20251003 14:36:36.796" level="INFO">${auth_headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluLW5zcnJ6b2Z2QHFhLmNvbSIsInBhc3N3b3JkIjoic2VuaGFmb3J0ZSIsImlhdCI6MTc1OTUxMjk5NCwiZXhwIjoxNzU5NTEzNTk0fQ.2sMFwTj_397vH_...</msg>
<status status="PASS" starttime="20251003 14:36:36.796" endtime="20251003 14:36:36.796"/>
</kw>
<kw name="Gerar nome de produto unico" library="product_keyword">
<var>${unique_name}</var>
<kw name="Generate Random String" library="String">
<var>${random_number}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20251003 14:36:36.796" level="INFO">${random_number} = 83889</msg>
<status status="PASS" starttime="20251003 14:36:36.796" endtime="20251003 14:36:36.796"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${unique_name}</var>
<arg>SEPARATOR=</arg>
<arg>Produto_</arg>
<arg>${random_number}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20251003 14:36:36.797" level="INFO">${unique_name} = Produto_83889</msg>
<status status="PASS" starttime="20251003 14:36:36.796" endtime="20251003 14:36:36.797"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${unique_name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251003 14:36:36.797" level="INFO">${unique_name} = Produto_83889</msg>
<status status="PASS" starttime="20251003 14:36:36.797" endtime="20251003 14:36:36.797"/>
</kw>
<msg timestamp="20251003 14:36:36.797" level="INFO">${unique_name} = Produto_83889</msg>
<status status="PASS" starttime="20251003 14:36:36.796" endtime="20251003 14:36:36.797"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>nome=${unique_name}</arg>
<arg>preco=${PRODUTO.preco}</arg>
<arg>descricao=${PRODUTO.descricao}</arg>
<arg>quantidade=${PRODUTO.quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20251003 14:36:36.798" level="INFO">${body} = {'nome': 'Produto_83889', 'preco': '100', 'descricao': 'Descricao do produto teste', 'quantidade': '10'}</msg>
<status status="PASS" starttime="20251003 14:36:36.797" endtime="20251003 14:36:36.798"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/produtos</arg>
<arg>json=${body}</arg>
<arg>headers=${auth_headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20251003 14:36:36.990" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluLW5zcnJ6b2Z2QHFhLmNvbSIsInBhc3N3b3JkIjoic2VuaGFmb3J0ZSIsImlhdCI6MTc1OTUxMjk5NCwiZXhwIjoxNzU5NTEzNTk0fQ.2sMFwTj_397vH__taUMEl117_GVAiAdMcZLoEEwJ7oI', 'Content-Length': '104', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto_83889", "preco": "100", "descricao": "Descricao do produto teste", "quantidade": "10"}' 
 </msg>
<msg timestamp="20251003 14:36:36.990" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': 'e2db091dd2e98877b69626e9aba82522', 'date': 'Fri, 03 Oct 2025 17:36:35 GMT', 'server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "5gd8DbHRf883D5lI"
} 
 </msg>
<msg timestamp="20251003 14:36:36.990" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251003 14:36:36.991" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20251003 14:36:36.798" endtime="20251003 14:36:36.991"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>201</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20251003 14:36:36.991" endtime="20251003 14:36:36.991"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>Cadastro realizado com sucesso</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20251003 14:36:36.991" endtime="20251003 14:36:36.991"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PRODUCT_ID}</arg>
<arg>${response.json()['_id']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251003 14:36:36.992" level="INFO">${PRODUCT_ID} = 5gd8DbHRf883D5lI</msg>
<status status="PASS" starttime="20251003 14:36:36.991" endtime="20251003 14:36:36.992"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Produto.unique_name}</arg>
<arg>${unique_name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251003 14:36:36.992" level="INFO">${Produto.unique_name} = Produto_83889</msg>
<status status="PASS" starttime="20251003 14:36:36.992" endtime="20251003 14:36:36.992"/>
</kw>
<status status="PASS" starttime="20251003 14:36:36.795" endtime="20251003 14:36:36.992"/>
</kw>
<kw name="Tentar cadastrar produto com nome duplicado" library="product_keyword">
<kw name="Create Dictionary" library="BuiltIn">
<var>${auth_headers}</var>
<arg>Authorization=${AUTH_HEADER}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20251003 14:36:36.993" level="INFO">${auth_headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluLW5zcnJ6b2Z2QHFhLmNvbSIsInBhc3N3b3JkIjoic2VuaGFmb3J0ZSIsImlhdCI6MTc1OTUxMjk5NCwiZXhwIjoxNzU5NTEzNTk0fQ.2sMFwTj_397vH_...</msg>
<status status="PASS" starttime="20251003 14:36:36.993" endtime="20251003 14:36:36.993"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>nome=${Produto.unique_name}</arg>
<arg>preco=99</arg>
<arg>descricao=Outro</arg>
<arg>quantidade=1</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20251003 14:36:36.993" level="INFO">${body} = {'nome': 'Produto_83889', 'preco': '99', 'descricao': 'Outro', 'quantidade': '1'}</msg>
<status status="PASS" starttime="20251003 14:36:36.993" endtime="20251003 14:36:36.993"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/produtos</arg>
<arg>json=${body}</arg>
<arg>headers=${auth_headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20251003 14:36:37.186" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluLW5zcnJ6b2Z2QHFhLmNvbSIsInBhc3N3b3JkIjoic2VuaGFmb3J0ZSIsImlhdCI6MTc1OTUxMjk5NCwiZXhwIjoxNzU5NTEzNTk0fQ.2sMFwTj_397vH__taUMEl117_GVAiAdMcZLoEEwJ7oI', 'Content-Length': '81', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto_83889", "preco": "99", "descricao": "Outro", "quantidade": "1"}' 
 </msg>
<msg timestamp="20251003 14:36:37.186" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '4f477d221e0878c0b69626e9aba82d18', 'date': 'Fri, 03 Oct 2025 17:36:35 GMT', 'server': 'Google Frontend', 'Content-Length': '53'} 
 body={
    "message": "Já existe produto com esse nome"
} 
 </msg>
<msg timestamp="20251003 14:36:37.186" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251003 14:36:37.188" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20251003 14:36:36.993" endtime="20251003 14:36:37.188"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>Já existe produto com esse nome</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20251003 14:36:37.188" endtime="20251003 14:36:37.190"/>
</kw>
<status status="PASS" starttime="20251003 14:36:36.993" endtime="20251003 14:36:37.190"/>
</kw>
<kw name="Buscar produto por ID e validar dados" library="product_keyword">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/produtos/${PRODUCT_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20251003 14:36:37.384" level="INFO">GET Request : url=https://serverest.dev/produtos/5gd8DbHRf883D5lI 
 path_url=/produtos/5gd8DbHRf883D5lI 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20251003 14:36:37.384" level="INFO">GET Response : url=https://serverest.dev/produtos/5gd8DbHRf883D5lI 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': 'e6358f45e45648b5b69626e9aba82182', 'date': 'Fri, 03 Oct 2025 17:36:35 GMT', 'server': 'Google Frontend', 'Content-Length': '149'} 
 body={
    "nome": "Produto_83889",
    "preco": 100,
    "descricao": "Descricao do produto teste",
    "quantidade": 10,
    "_id": "5gd8DbHRf883D5lI"
} 
 </msg>
<msg timestamp="20251003 14:36:37.384" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251003 14:36:37.386" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20251003 14:36:37.192" endtime="20251003 14:36:37.386"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20251003 14:36:37.387" endtime="20251003 14:36:37.387"/>
</kw>
<status status="PASS" starttime="20251003 14:36:37.191" endtime="20251003 14:36:37.387"/>
</kw>
<kw name="Editar produto com sucesso" library="product_keyword">
<kw name="Create Dictionary" library="BuiltIn">
<var>${auth_headers}</var>
<arg>Authorization=${AUTH_HEADER}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20251003 14:36:37.391" level="INFO">${auth_headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluLW5zcnJ6b2Z2QHFhLmNvbSIsInBhc3N3b3JkIjoic2VuaGFmb3J0ZSIsImlhdCI6MTc1OTUxMjk5NCwiZXhwIjoxNzU5NTEzNTk0fQ.2sMFwTj_397vH_...</msg>
<status status="PASS" starttime="20251003 14:36:37.390" endtime="20251003 14:36:37.391"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>nome=Produto Editado</arg>
<arg>preco=150</arg>
<arg>descricao=Descrição Editada</arg>
<arg>quantidade=20</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20251003 14:36:37.392" level="INFO">${body} = {'nome': 'Produto Editado', 'preco': '150', 'descricao': 'Descrição Editada', 'quantidade': '20'}</msg>
<status status="PASS" starttime="20251003 14:36:37.391" endtime="20251003 14:36:37.392"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/produtos/${PRODUCT_ID}</arg>
<arg>json=${body}</arg>
<arg>headers=${auth_headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20251003 14:36:37.588" level="INFO">PUT Request : url=https://serverest.dev/produtos/5gd8DbHRf883D5lI 
 path_url=/produtos/5gd8DbHRf883D5lI 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluLW5zcnJ6b2Z2QHFhLmNvbSIsInBhc3N3b3JkIjoic2VuaGFmb3J0ZSIsImlhdCI6MTc1OTUxMjk5NCwiZXhwIjoxNzU5NTEzNTk0fQ.2sMFwTj_397vH__taUMEl117_GVAiAdMcZLoEEwJ7oI', 'Content-Length': '107', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto Editado", "preco": "150", "descricao": "Descri\\u00e7\\u00e3o Editada", "quantidade": "20"}' 
 </msg>
<msg timestamp="20251003 14:36:37.588" level="INFO">PUT Response : url=https://serverest.dev/produtos/5gd8DbHRf883D5lI 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': 'd7294830de4d4af2b69626e9aba829a9', 'date': 'Fri, 03 Oct 2025 17:36:35 GMT', 'server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20251003 14:36:37.588" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251003 14:36:37.589" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20251003 14:36:37.392" endtime="20251003 14:36:37.589"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20251003 14:36:37.589" endtime="20251003 14:36:37.590"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>Registro alterado com sucesso</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20251003 14:36:37.590" endtime="20251003 14:36:37.591"/>
</kw>
<status status="PASS" starttime="20251003 14:36:37.389" endtime="20251003 14:36:37.592"/>
</kw>
<kw name="Excluir produto com sucesso" library="product_keyword">
<kw name="Create Dictionary" library="BuiltIn">
<var>${auth_headers}</var>
<arg>Authorization=${AUTH_HEADER}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20251003 14:36:37.594" level="INFO">${auth_headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluLW5zcnJ6b2Z2QHFhLmNvbSIsInBhc3N3b3JkIjoic2VuaGFmb3J0ZSIsImlhdCI6MTc1OTUxMjk5NCwiZXhwIjoxNzU5NTEzNTk0fQ.2sMFwTj_397vH_...</msg>
<status status="PASS" starttime="20251003 14:36:37.593" endtime="20251003 14:36:37.594"/>
</kw>
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/produtos/${PRODUCT_ID}</arg>
<arg>headers=${auth_headers}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20251003 14:36:37.787" level="INFO">DELETE Request : url=https://serverest.dev/produtos/5gd8DbHRf883D5lI 
 path_url=/produtos/5gd8DbHRf883D5lI 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluLW5zcnJ6b2Z2QHFhLmNvbSIsInBhc3N3b3JkIjoic2VuaGFmb3J0ZSIsImlhdCI6MTc1OTUxMjk5NCwiZXhwIjoxNzU5NTEzNTk0fQ.2sMFwTj_397vH__taUMEl117_GVAiAdMcZLoEEwJ7oI', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20251003 14:36:37.788" level="INFO">DELETE Response : url=https://serverest.dev/produtos/5gd8DbHRf883D5lI 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '6f380d457d9e0130b69626e9aba82d4f', 'date': 'Fri, 03 Oct 2025 17:36:35 GMT', 'server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20251003 14:36:37.788" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251003 14:36:37.790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20251003 14:36:37.594" endtime="20251003 14:36:37.790"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20251003 14:36:37.791" endtime="20251003 14:36:37.791"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>Registro excluído com sucesso</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20251003 14:36:37.792" endtime="20251003 14:36:37.794"/>
</kw>
<status status="PASS" starttime="20251003 14:36:37.592" endtime="20251003 14:36:37.794"/>
</kw>
<tag>produtos</tag>
<status status="PASS" starttime="20251003 14:36:36.004" endtime="20251003 14:36:37.795"/>
</test>
<kw name="Delete All Sessions" library="RequestsLibrary" type="TEARDOWN">
<doc>Removes all the session objects</doc>
<msg timestamp="20251003 14:36:37.800" level="INFO">Deleting All Sessions</msg>
<status status="PASS" starttime="20251003 14:36:37.799" endtime="20251003 14:36:37.800"/>
</kw>
<status status="PASS" starttime="20251003 14:36:35.793" endtime="20251003 14:36:37.800"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">produtos</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Product Test">Product Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
