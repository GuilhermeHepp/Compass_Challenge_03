<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.13.5 on win32)" generated="20251002 02:01:07.572" rpa="false" schemaversion="4">
<suite id="s1" name="Product Test" source="C:\Users\ghepp\Compass_Challenge_03\tests\product_test.robot">
<test id="s1-t1" name="Fluxo de Produtos (Requer Autenticacao)" line="12">
<kw name="Setup para Testes Autenticados" library="common_keyword" type="SETUP">
<kw name="Setup Test Session" library="common_keyword">
<kw name="Create Session" library="RequestsLibrary">
<arg>${API_SESSION}</arg>
<arg>${BASE_URL}</arg>
<arg>timeout=${TIMEOUT}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20251002 02:01:07.785" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=120, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20251002 02:01:07.785" endtime="20251002 02:01:07.785"/>
</kw>
<status status="PASS" starttime="20251002 02:01:07.785" endtime="20251002 02:01:07.785"/>
</kw>
<kw name="Fazer Login e Salvar Token" library="login_keyword">
<var>${response}</var>
<arg>${EMAIL_ADMIN}</arg>
<arg>${USER_ADMIN.password}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20251002 02:01:07.786" level="INFO">${body} = {'email': 'admin_robot_125@qa.com.br', 'password': 'Teste123'}</msg>
<status status="PASS" starttime="20251002 02:01:07.786" endtime="20251002 02:01:07.786"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/login</arg>
<arg>json=${body}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20251002 02:01:08.267" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '62', 'Content-Type': 'application/json'} 
 body=b'{"email": "admin_robot_125@qa.com.br", "password": "Teste123"}' 
 </msg>
<msg timestamp="20251002 02:01:08.267" level="INFO">POST Response : url=https://serverest.dev/login 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': 'a367180c8516fb6a72308e606ff05ee3', 'date': 'Thu, 02 Oct 2025 05:01:05 GMT', 'server': 'Google Frontend', 'Content-Length': '285'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluX3JvYm90XzEyNUBxYS5jb20uYnIiLCJwYXNzd29yZCI6IlRlc3RlMTIzIiwiaWF0IjoxNzU5MzgxMjY1LCJleHAiOjE3NTkzODE4NjV9.yXQ4XbWVYDTYTmi7Xx7ntzY7YmuvwCPfFbguaic5deI"
} 
 </msg>
<msg timestamp="20251002 02:01:08.267" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251002 02:01:08.268" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20251002 02:01:07.786" endtime="20251002 02:01:08.268"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${auth_header}</var>
<arg>${response.json()['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20251002 02:01:08.269" level="INFO">${auth_header} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluX3JvYm90XzEyNUBxYS5jb20uYnIiLCJwYXNzd29yZCI6IlRlc3RlMTIzIiwiaWF0IjoxNzU5MzgxMjY1LCJleHAiOjE3NTkzODE4NjV9.yXQ4XbWVYDTYTmi7Xx7ntzY7YmuvwCP...</msg>
<status status="PASS" starttime="20251002 02:01:08.268" endtime="20251002 02:01:08.269"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${AUTH_HEADER}</arg>
<arg>${auth_header}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251002 02:01:08.270" level="INFO">${AUTH_HEADER} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluX3JvYm90XzEyNUBxYS5jb20uYnIiLCJwYXNzd29yZCI6IlRlc3RlMTIzIiwiaWF0IjoxNzU5MzgxMjY1LCJleHAiOjE3NTkzODE4NjV9.yXQ4XbWVYDTYTmi7Xx7ntzY7YmuvwCP...</msg>
<status status="PASS" starttime="20251002 02:01:08.269" endtime="20251002 02:01:08.270"/>
</kw>
<msg timestamp="20251002 02:01:08.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20251002 02:01:07.785" endtime="20251002 02:01:08.270"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${response.json()}</arg>
<arg>authorization</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251002 02:01:08.270" endtime="20251002 02:01:08.271"/>
</kw>
<status status="PASS" starttime="20251002 02:01:07.784" endtime="20251002 02:01:08.271"/>
</kw>
<kw name="Listar produtos e validar schema" library="product_keyword">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/produtos</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20251002 02:01:08.644" level="INFO">GET Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20251002 02:01:08.644" level="INFO">GET Response : url=https://serverest.dev/produtos 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': 'c74477bb8c93ae0c72308e606ff05704', 'date': 'Thu, 02 Oct 2025 05:01:05 GMT', 'server': 'Google Frontend', 'Content-Length': '51065'} 
 body={
    "quantidade": 217,
    "produtos": [
        {
            "nome": "UpdatedProduct",
            "preco": 123,
            "descricao": "This is a robot test product.",
            "quantidade": 5,
            "_id": "0Jc8oq2OAMy9oBmv"
        },
        {
            "nome": "Prod",
            "preco": 100,
            "descricao": "desc",
            "quantidade": 8,
            "_id": "0KxMGyKBSlMogpY4"
        },
        {
            "nome": "Bespoke Steel Computer",
            "preco": 535,
            "descricao": "Experience the violet brilliance of our Gloves, perfect for ripe environments",
            "quantidade": 44,
            "_id": "0RRTJ2bE0MA0WKKY"
        },
        {
            "nome": "Awesome Steel Tuna",
            "preco": 1600,
            "descricao": "The gold Hat combines Republic of Korea aesthetics with Dubnium-based durability",
            "quantidade": 18,
            "_id": "0SlfD3t2vt1ReUT2"
        },
        {
            "nome": "ProdX",
            "preco": 15,
            "descricao": "desc",
            "quantidade": 3,
            "_id": "0cmEDI2exp1yEXAu"
        },
        {
            "nome": "Prod1759376057",
            "preco": 200,
            "descricao": "desc",
            "quantidade": 4,
            "_id": "0hvZTnvvLyd7DpBL"
        },
        {
            "nome": "reality",
            "preco": 803,
            "descricao": "Instead myself record teacher. Customer their pay.\nModel tax behavior later they source eat. Back first before.\nPressure become floor need force although. In former face south reduce human.",
            "quantidade": 7,
            "_id": "0n6dgfoRzdaq4QKL"
        },
        {
            "nome": "Modern Marble Pants",
            "preco": 1600,
            "descricao": "Our fresh-inspired Mouse brings a taste of luxury to your optimal lifestyle",
            "quantidade": 18,
            "_id": "0udGrDAjyVYjdxej"
        },
        {
            "nome": "Refined Metal Cheese",
            "preco": 408,
            "descricao": "Savor the savory essence in our Keyboard, designed for gracious culinary adventures",
            "quantidade": 46,
            "_id": "1ViMM8pGJyaxR6oa"
        },
        {
            "nome": "commercial",
            "preco": 315,
            "descricao": "Parent practice together. Strong our participant each expert.",
            "quantidade": 5,
            "_id": "1euPyjN9pf3Glb8L"
        },
        {
            "nome": "Produto sed 48679",
            "preco": 950,
            "descricao": "Id ducimus error dolorum nostrum quasi.",
            "quantidade": "642",
            "_id": "2Gj4D290nJEcGjV1"
        },
        {
            "nome": "aspernatur",
            "preco": 198,
            "descricao": "Velit non officiis veritatis deleniti. Reprehenderit inventore nobis impedit laboriosam modi et. Expedita sunt vitae quod cum ex quasi.",
            "quantidade": 1,
            "_id": "2YDklyyYR1aFOSKT"
        },
        {
            "nome": "TestProd",
            "preco": 100,
            "descricao": "desc",
            "quantidade": 5,
            "_id": "2x6xLOX3zGAFiXHI"
        },
        {
            "nome": "Licensed Silk Tuna",
            "preco": 218,
            "descricao": "New gold Ball with ergonomic design for fussy comfort",
            "quantidade": 49,
            "_id": "3CdBw4mOgM3hetwg"
        },
        {
            "nome": "MP3 player",
            "preco": 470,
            "descricao": "aparelho de música",
            "quantidade": 381,
            "_id": "3RMxXtQ84rzTFMRV"
        },
        {
            "nome": "PS5",
            "preco": 2600,
            "descricao": "Videogame",
            "quantidade": 19,
            "_id": "3kprbsQblylNk9GK"
        },
        {
            "nome": "Produto Test",
            "preco": 100,
            "descricao": "Descricao do produto teste",
            "quantidade": 10,
            "_id": "3u1c73cCL0kuxUbz"
        },
        {
            "nome": "Produto_95961",
            "preco": 100,
            "descricao": "Descricao do produto teste",
            "quantidade": 9,
            "_id": "3xDLlzwjdUEzMyGu"
        },
        {
            "nome": "Processador",
            "preco": 900,
            "descricao": "i7",
            "quantidade": 100,
            "_id": "4rt2Z3FuStgVbceZ"
        },
        {
            "nome": "ProdCart",
            "preco": 150,
            "descricao": "desc",
            "quantidade": 47,
            "_id": "4taBFIdQvVCuWXz3"
        },
        {
            "nome": "Produto uuuu",
            "preco": 100,
            "descricao": "Descricao do produto teste",
            "quantidade": 9,
            "_id": "4wEojtdN4kler8Aa"
        },
        {
            "nome": "Elegant Gold Hat",
            "preco": 500,
            "descricao": "Stylish Pants designed to make you stand out with unwieldy looks",
            "quantidade": 0,
            "_id": "5KkvY9WlTXp6RdXZ"
        },
        {
            "nome": "everything",
            "preco": 496,
            "descricao": "Role movie win.",
            "quantidade": 82,
            "_id": "5qeZiMCo0CBfNjWX"
        },
        {
            "nome": "Cypress Product 1759321286928",
            "preco": 10,
            "descricao": "Product Description",
            "quantidade": 10,
            "imagem": "C:\\fakepath\\image.jpg",
            "_id": "6Y4l1PJNINIPD2zu"
        },
        {
            "nome": "maxime",
            "preco": 566,
            "descricao": "Necessitatibus nesciunt qui. Repellendus maiores natus. Officia eius magni accusamus facilis perferendis accusantium. Provident eos facere quidem.\nSimilique similique deserunt iusto aut.",
            "quantidade": 5,
            "_id": "6eTnebtb6cQfDEZM"
        },
        {
            "nome": "Produto quam 78090",
            "preco": 685,
            "descricao": "Tempora voluptatum dolorem itaque ratione.",
            "quantidade": "32",
            "_id": "6kmh9TeUmfb9pmft"
        },
        {
            "nome": "DeleteNonAdmin",
            "preco": 222,
            "descricao": "desc",
            "quantidade": 1,
            "_id": "6thRuCR6JhVWtcej"
        },
        {
            "nome": "Prod_1759376768",
            "preco": 100,
            "descricao": "TestProduct",
            "quantidade": 10,
            "_id": "728ZEXUmbLE5v7EU"
        },
        {
            "nome": "UserProduct",
            "preco": 10,
            "descricao": "desc",
            "quantidade": 5,
            "_id": "7ARioGi0JDxL1a59"
        },
        {
            "nome": "TestProductDup",
            "preco": 10,
            "descricao": "desc",
            "quantidade": 5,
            "_id": "7hZMnkqAitRSYP3s"
        },
        {
            "nome": "UpdateTestProdEdited",
            "preco": 150,
            "descricao": "newdesc",
            "quantidade": 2,
            "_id": "7nNI7dBNSqiHcvpe"
        },
        {
            "nome": "Produto oBitLcLfvp",
            "preco": 100,
            "descricao": "Descricao do produto oBitLcLfvp",
            "quantidade": 50,
            "_id": "7qp784H9DNTuex1s"
        },
        {
            "nome": "Recycled Cotton Tuna",
            "preco": 500,
            "descricao": "Intelligent Fish designed with Cotton for overdue performance",
            "quantidade": 10,
            "_id": "7r5PjnBZEXI38lCu"
        },
        {
            "nome": "Fresh Steel Cheese",
            "preco": 435,
            "descricao": "New Bike model with 79 GB RAM, 875 GB storage, and steep features",
            "quantidade": 73,
            "_id": "8wOmSorZH92OXkhG"
        },
        {
            "nome": "Prod1759376089",
            "preco": 100,
            "descricao": "desc",
            "quantidade": 0,
            "_id": "8zKAksFY1rxmUfGE"
        },
        {
            "nome": "aaa",
            "preco": 112,
            "descricao": "aaa",
            "quantidade": 12,
            "_id": "9Njo36B5eMFEjgEj"
        },
        {
            "nome": "Produto nulla 4834",
            "preco": 103,
            "descricao": "Ipsa amet libero excepturi quas.",
            "quantidade": "871",
            "_id": "9Z5jKonsV9FF19Rd"
        },
        {
            "nome": "Small Plastic Car",
            "preco": 140,
            "descricao": "Ergonomic Tuna made with Aluminum for all-day trivial support",
            "quantidade": 69,
            "_id": "9e62bV7mbJHA7fmu"
        },
        {
            "nome": "quaerat",
            "preco": 814,
            "descricao": "Nisi mollitia explicabo in sapiente. Quaerat laudantium praesentium. Enim laborum tenetur adipisci pariatur ipsum.",
            "quantidade": 6,
            "_id": "A5AYc0QA0c95pQmS"
        },
        {
            "nome": "Produto_89811",
            "preco": 100,
            "descricao": "Descricao do produto teste",
            "quantidade": 9,
            "_id": "A7mGo68GGhvzJ6Ad"
        },
        {
            "nome": "Sleek Plastic Chips",
            "preco": 1600,
            "descricao": "New purple Shirt with ergonomic design for rotten comfort",
            "quantidade": 18,
            "_id": "AMHr0HOwygkGMwtR"
        },
        {
            "nome": "Produto uio",
            "preco": 100,
            "descricao": "Descricao do produto teste",
            "quantidade": 9,
            "_id": "AfEABUerXOMN0c5M"
        },
        {
            "nome": "Produto voluptatum 44797",
            "preco": 399,
            "descricao": "Corporis asperiores vero unde quaerat.",
            "quantidade": "701",
            "_id": "AhHChBxQ5ISEByHB"
        },
        {
            "nome": "Prod2",
            "preco": 200,
            "descricao": "desc",
            "quantidade": 20,
            "_id": "B8fKpvi1Elbb7UIu"
        },
        {
            "nome": "Recycled Steel Computer",
            "preco": 433,
            "des... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20251002 02:01:08.644" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251002 02:01:08.645" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20251002 02:01:08.272" endtime="20251002 02:01:08.645"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20251002 02:01:08.645" endtime="20251002 02:01:08.645"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_response}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20251002 02:01:08.647" level="INFO">${json_response} = {'quantidade': 217, 'produtos': [{'nome': 'UpdatedProduct', 'preco': 123, 'descricao': 'This is a robot test product.', 'quantidade': 5, '_id': '0Jc8oq2OAMy9oBmv'}, {'nome': 'Prod', 'preco': 100, 'des...</msg>
<status status="PASS" starttime="20251002 02:01:08.645" endtime="20251002 02:01:08.647"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${json_response}</arg>
<arg>quantidade</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251002 02:01:08.647" endtime="20251002 02:01:08.647"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${json_response}</arg>
<arg>produtos</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251002 02:01:08.647" endtime="20251002 02:01:08.647"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${primeiro_produto}</var>
<arg>${json_response['produtos']}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251002 02:01:08.648" level="INFO">${primeiro_produto} = {'nome': 'UpdatedProduct', 'preco': 123, 'descricao': 'This is a robot test product.', 'quantidade': 5, '_id': '0Jc8oq2OAMy9oBmv'}</msg>
<status status="PASS" starttime="20251002 02:01:08.647" endtime="20251002 02:01:08.648"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${primeiro_produto}</arg>
<arg>nome</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251002 02:01:08.648" endtime="20251002 02:01:08.648"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${primeiro_produto}</arg>
<arg>preco</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251002 02:01:08.648" endtime="20251002 02:01:08.648"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${primeiro_produto}</arg>
<arg>descricao</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251002 02:01:08.648" endtime="20251002 02:01:08.648"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${primeiro_produto}</arg>
<arg>quantidade</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251002 02:01:08.648" endtime="20251002 02:01:08.648"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${primeiro_produto}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251002 02:01:08.648" endtime="20251002 02:01:08.648"/>
</kw>
<status status="PASS" starttime="20251002 02:01:08.271" endtime="20251002 02:01:08.649"/>
</kw>
<kw name="Cadastrar produto com sucesso" library="product_keyword">
<kw name="Create Dictionary" library="BuiltIn">
<var>${auth_headers}</var>
<arg>Authorization=${AUTH_HEADER}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20251002 02:01:08.650" level="INFO">${auth_headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluX3JvYm90XzEyNUBxYS5jb20uYnIiLCJwYXNzd29yZCI6IlRlc3RlMTIzIiwiaWF0IjoxNzU5MzgxMjY1LCJleHAiOjE3NTkzODE4NjV9.yXQ4XbWVYDTY...</msg>
<status status="PASS" starttime="20251002 02:01:08.649" endtime="20251002 02:01:08.650"/>
</kw>
<kw name="Gerar nome de produto unico" library="product_keyword">
<var>${unique_name}</var>
<kw name="Generate Random String" library="String">
<var>${random_number}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20251002 02:01:08.651" level="INFO">${random_number} = 70761</msg>
<status status="PASS" starttime="20251002 02:01:08.650" endtime="20251002 02:01:08.651"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${unique_name}</var>
<arg>SEPARATOR=</arg>
<arg>Produto_</arg>
<arg>${random_number}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20251002 02:01:08.651" level="INFO">${unique_name} = Produto_70761</msg>
<status status="PASS" starttime="20251002 02:01:08.651" endtime="20251002 02:01:08.651"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${unique_name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251002 02:01:08.651" level="INFO">${unique_name} = Produto_70761</msg>
<status status="PASS" starttime="20251002 02:01:08.651" endtime="20251002 02:01:08.651"/>
</kw>
<msg timestamp="20251002 02:01:08.651" level="INFO">${unique_name} = Produto_70761</msg>
<status status="PASS" starttime="20251002 02:01:08.650" endtime="20251002 02:01:08.651"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>nome=${unique_name}</arg>
<arg>preco=${PRODUTO.preco}</arg>
<arg>descricao=${PRODUTO.descricao}</arg>
<arg>quantidade=${PRODUTO.quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20251002 02:01:08.652" level="INFO">${body} = {'nome': 'Produto_70761', 'preco': '100', 'descricao': 'Descricao do produto teste', 'quantidade': '10'}</msg>
<status status="PASS" starttime="20251002 02:01:08.651" endtime="20251002 02:01:08.652"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/produtos</arg>
<arg>json=${body}</arg>
<arg>headers=${auth_headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20251002 02:01:08.880" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluX3JvYm90XzEyNUBxYS5jb20uYnIiLCJwYXNzd29yZCI6IlRlc3RlMTIzIiwiaWF0IjoxNzU5MzgxMjY1LCJleHAiOjE3NTkzODE4NjV9.yXQ4XbWVYDTYTmi7Xx7ntzY7YmuvwCPfFbguaic5deI', 'Content-Length': '104', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto_70761", "preco": "100", "descricao": "Descricao do produto teste", "quantidade": "10"}' 
 </msg>
<msg timestamp="20251002 02:01:08.880" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '01fb99cbf2caf26d9dc3e7c3d69ccfe1', 'date': 'Thu, 02 Oct 2025 05:01:05 GMT', 'server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "K3nh5fyiyo9exLkp"
} 
 </msg>
<msg timestamp="20251002 02:01:08.880" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251002 02:01:08.882" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20251002 02:01:08.652" endtime="20251002 02:01:08.882"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>201</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20251002 02:01:08.882" endtime="20251002 02:01:08.883"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>Cadastro realizado com sucesso</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20251002 02:01:08.883" endtime="20251002 02:01:08.885"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PRODUCT_ID}</arg>
<arg>${response.json()['_id']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251002 02:01:08.887" level="INFO">${PRODUCT_ID} = K3nh5fyiyo9exLkp</msg>
<status status="PASS" starttime="20251002 02:01:08.885" endtime="20251002 02:01:08.887"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Produto.unique_name}</arg>
<arg>${unique_name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251002 02:01:08.889" level="INFO">${Produto.unique_name} = Produto_70761</msg>
<status status="PASS" starttime="20251002 02:01:08.887" endtime="20251002 02:01:08.889"/>
</kw>
<status status="PASS" starttime="20251002 02:01:08.649" endtime="20251002 02:01:08.889"/>
</kw>
<kw name="Tentar cadastrar produto com nome duplicado" library="product_keyword">
<kw name="Create Dictionary" library="BuiltIn">
<var>${auth_headers}</var>
<arg>Authorization=${AUTH_HEADER}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20251002 02:01:08.892" level="INFO">${auth_headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluX3JvYm90XzEyNUBxYS5jb20uYnIiLCJwYXNzd29yZCI6IlRlc3RlMTIzIiwiaWF0IjoxNzU5MzgxMjY1LCJleHAiOjE3NTkzODE4NjV9.yXQ4XbWVYDTY...</msg>
<status status="PASS" starttime="20251002 02:01:08.891" endtime="20251002 02:01:08.892"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>nome=${Produto.unique_name}</arg>
<arg>preco=99</arg>
<arg>descricao=Outro</arg>
<arg>quantidade=1</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20251002 02:01:08.893" level="INFO">${body} = {'nome': 'Produto_70761', 'preco': '99', 'descricao': 'Outro', 'quantidade': '1'}</msg>
<status status="PASS" starttime="20251002 02:01:08.892" endtime="20251002 02:01:08.893"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/produtos</arg>
<arg>json=${body}</arg>
<arg>headers=${auth_headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20251002 02:01:09.072" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluX3JvYm90XzEyNUBxYS5jb20uYnIiLCJwYXNzd29yZCI6IlRlc3RlMTIzIiwiaWF0IjoxNzU5MzgxMjY1LCJleHAiOjE3NTkzODE4NjV9.yXQ4XbWVYDTYTmi7Xx7ntzY7YmuvwCPfFbguaic5deI', 'Content-Length': '81', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto_70761", "preco": "99", "descricao": "Outro", "quantidade": "1"}' 
 </msg>
<msg timestamp="20251002 02:01:09.072" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '1aed5832ad75d4859dc3e7c3d69cc26d', 'date': 'Thu, 02 Oct 2025 05:01:06 GMT', 'server': 'Google Frontend', 'Content-Length': '53'} 
 body={
    "message": "Já existe produto com esse nome"
} 
 </msg>
<msg timestamp="20251002 02:01:09.072" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251002 02:01:09.074" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20251002 02:01:08.894" endtime="20251002 02:01:09.074"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>Já existe produto com esse nome</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20251002 02:01:09.074" endtime="20251002 02:01:09.076"/>
</kw>
<status status="PASS" starttime="20251002 02:01:08.890" endtime="20251002 02:01:09.076"/>
</kw>
<kw name="Buscar produto por ID e validar dados" library="product_keyword">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/produtos/${PRODUCT_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20251002 02:01:09.253" level="INFO">GET Request : url=https://serverest.dev/produtos/K3nh5fyiyo9exLkp 
 path_url=/produtos/K3nh5fyiyo9exLkp 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20251002 02:01:09.253" level="INFO">GET Response : url=https://serverest.dev/produtos/K3nh5fyiyo9exLkp 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '8a3c26dba633e4509dc3e7c3d69cc27c', 'date': 'Thu, 02 Oct 2025 05:01:06 GMT', 'server': 'Google Frontend', 'Content-Length': '149'} 
 body={
    "nome": "Produto_70761",
    "preco": 100,
    "descricao": "Descricao do produto teste",
    "quantidade": 10,
    "_id": "K3nh5fyiyo9exLkp"
} 
 </msg>
<msg timestamp="20251002 02:01:09.253" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251002 02:01:09.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20251002 02:01:09.078" endtime="20251002 02:01:09.254"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20251002 02:01:09.254" endtime="20251002 02:01:09.254"/>
</kw>
<status status="PASS" starttime="20251002 02:01:09.077" endtime="20251002 02:01:09.254"/>
</kw>
<kw name="Editar produto com sucesso" library="product_keyword">
<kw name="Create Dictionary" library="BuiltIn">
<var>${auth_headers}</var>
<arg>Authorization=${AUTH_HEADER}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20251002 02:01:09.255" level="INFO">${auth_headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluX3JvYm90XzEyNUBxYS5jb20uYnIiLCJwYXNzd29yZCI6IlRlc3RlMTIzIiwiaWF0IjoxNzU5MzgxMjY1LCJleHAiOjE3NTkzODE4NjV9.yXQ4XbWVYDTY...</msg>
<status status="PASS" starttime="20251002 02:01:09.255" endtime="20251002 02:01:09.255"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>nome=Produto Editado</arg>
<arg>preco=150</arg>
<arg>descricao=Descrição Editada</arg>
<arg>quantidade=20</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20251002 02:01:09.256" level="INFO">${body} = {'nome': 'Produto Editado', 'preco': '150', 'descricao': 'Descrição Editada', 'quantidade': '20'}</msg>
<status status="PASS" starttime="20251002 02:01:09.255" endtime="20251002 02:01:09.256"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/produtos/${PRODUCT_ID}</arg>
<arg>json=${body}</arg>
<arg>headers=${auth_headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20251002 02:01:09.446" level="INFO">PUT Request : url=https://serverest.dev/produtos/K3nh5fyiyo9exLkp 
 path_url=/produtos/K3nh5fyiyo9exLkp 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluX3JvYm90XzEyNUBxYS5jb20uYnIiLCJwYXNzd29yZCI6IlRlc3RlMTIzIiwiaWF0IjoxNzU5MzgxMjY1LCJleHAiOjE3NTkzODE4NjV9.yXQ4XbWVYDTYTmi7Xx7ntzY7YmuvwCPfFbguaic5deI', 'Content-Length': '107', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto Editado", "preco": "150", "descricao": "Descri\\u00e7\\u00e3o Editada", "quantidade": "20"}' 
 </msg>
<msg timestamp="20251002 02:01:09.446" level="INFO">PUT Response : url=https://serverest.dev/produtos/K3nh5fyiyo9exLkp 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': 'e13e0ace13606ccd9dc3e7c3d69cc707', 'date': 'Thu, 02 Oct 2025 05:01:06 GMT', 'server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20251002 02:01:09.447" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251002 02:01:09.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20251002 02:01:09.256" endtime="20251002 02:01:09.448"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20251002 02:01:09.449" endtime="20251002 02:01:09.449"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>Registro alterado com sucesso</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20251002 02:01:09.450" endtime="20251002 02:01:09.451"/>
</kw>
<status status="PASS" starttime="20251002 02:01:09.255" endtime="20251002 02:01:09.452"/>
</kw>
<kw name="Excluir produto com sucesso" library="product_keyword">
<kw name="Create Dictionary" library="BuiltIn">
<var>${auth_headers}</var>
<arg>Authorization=${AUTH_HEADER}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20251002 02:01:09.454" level="INFO">${auth_headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluX3JvYm90XzEyNUBxYS5jb20uYnIiLCJwYXNzd29yZCI6IlRlc3RlMTIzIiwiaWF0IjoxNzU5MzgxMjY1LCJleHAiOjE3NTkzODE4NjV9.yXQ4XbWVYDTY...</msg>
<status status="PASS" starttime="20251002 02:01:09.453" endtime="20251002 02:01:09.454"/>
</kw>
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/produtos/${PRODUCT_ID}</arg>
<arg>headers=${auth_headers}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20251002 02:01:09.640" level="INFO">DELETE Request : url=https://serverest.dev/produtos/K3nh5fyiyo9exLkp 
 path_url=/produtos/K3nh5fyiyo9exLkp 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluX3JvYm90XzEyNUBxYS5jb20uYnIiLCJwYXNzd29yZCI6IlRlc3RlMTIzIiwiaWF0IjoxNzU5MzgxMjY1LCJleHAiOjE3NTkzODE4NjV9.yXQ4XbWVYDTYTmi7Xx7ntzY7YmuvwCPfFbguaic5deI', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20251002 02:01:09.640" level="INFO">DELETE Response : url=https://serverest.dev/produtos/K3nh5fyiyo9exLkp 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': 'e26e8b324e3b391a9dc3e7c3d69cc9b8', 'date': 'Thu, 02 Oct 2025 05:01:06 GMT', 'server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20251002 02:01:09.640" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251002 02:01:09.642" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20251002 02:01:09.454" endtime="20251002 02:01:09.642"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20251002 02:01:09.642" endtime="20251002 02:01:09.643"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>Registro excluído com sucesso</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20251002 02:01:09.643" endtime="20251002 02:01:09.644"/>
</kw>
<status status="PASS" starttime="20251002 02:01:09.452" endtime="20251002 02:01:09.644"/>
</kw>
<tag>produtos</tag>
<status status="PASS" starttime="20251002 02:01:07.784" endtime="20251002 02:01:09.644"/>
</test>
<kw name="Delete All Sessions" library="RequestsLibrary" type="TEARDOWN">
<doc>Removes all the session objects</doc>
<msg timestamp="20251002 02:01:09.645" level="INFO">Deleting All Sessions</msg>
<status status="PASS" starttime="20251002 02:01:09.645" endtime="20251002 02:01:09.645"/>
</kw>
<status status="PASS" starttime="20251002 02:01:07.573" endtime="20251002 02:01:09.645"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">produtos</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Product Test">Product Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
