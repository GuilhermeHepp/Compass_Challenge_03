<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.13.5 on win32)" generated="20251003 14:36:31.923" rpa="false" schemaversion="4">
<suite id="s1" name="User Test" source="C:\Users\ghepp\Compass_Challenge_03\Robot_ServeRest\tests\user_test.robot">
<test id="s1-t1" name="Fluxo de Usuarios" line="12">
<kw name="Listar usuarios e validar schema" library="user_keyword">
<kw name="Create Session" library="RequestsLibrary">
<arg>${API_SESSION}</arg>
<arg>${BASE_URL}</arg>
<arg>timeout=${TIMEOUT}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20251003 14:36:32.133" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=120, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20251003 14:36:32.133" endtime="20251003 14:36:32.133"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/usuarios</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20251003 14:36:32.903" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20251003 14:36:32.904" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': 'd7f134fddc0ea42277befa35895c9820;o=1', 'date': 'Fri, 03 Oct 2025 17:36:30 GMT', 'server': 'Google Frontend', 'Content-Length': '83958'} 
 body={
    "quantidade": 381,
    "usuarios": [
        {
            "nome": "Usuario Senha Curta",
            "email": "shortpass-mylxstai@qa.com",
            "password": "1234",
            "administrador": "false",
            "_id": "065DhAT0ZHJLsXBY"
        },
        {
            "nome": "Usuario Teste 1759511378",
            "email": "teste1759511378@qa.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "0EjcDbEq2TyC6a8e"
        },
        {
            "nome": "Ana Carolina Azevedo",
            "email": "maria-luisa20@example.com",
            "password": "senha123",
            "administrador": "true",
            "_id": "0d063Nq9prOUMp0y"
        },
        {
            "nome": "Admin nsrrzofv",
            "email": "admin-nsrrzofv@qa.com",
            "password": "senhaforte",
            "administrador": "true",
            "_id": "0p9ZqkAZFkFwzDWj"
        },
        {
            "nome": "Usuário Teste",
            "email": "teste8378@teste.com",
            "password": "123",
            "administrador": "true",
            "_id": "0pOweM5Hiku1svfe"
        },
        {
            "nome": "Fulano ALTERADO b40k",
            "email": "usuarioi8gbe@qa.com.br",
            "password": "123456",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Isis Carvalho",
            "email": "meloenzo-gabriel@example.org",
            "password": "senha123",
            "administrador": "true",
            "_id": "0xLOLCBFoqqcnTpK"
        },
        {
            "nome": "Test User",
            "email": "carlos@exemplo.com",
            "password": "12345",
            "administrador": "false",
            "_id": "14bKUoVYhdHBXrhp"
        },
        {
            "nome": "Usuario Gmail",
            "email": "fail-yjjknlbi@gmail.com",
            "password": "senha123",
            "administrador": "false",
            "_id": "1PgK6j91uXdZ7DJU"
        },
        {
            "nome": "Usuario Gmail",
            "email": "fail-dfukkqbn@gmail.com",
            "password": "senha123",
            "administrador": "false",
            "_id": "1TIBZUdGMRLrOe09"
        },
        {
            "nome": "Fulano da Silva",
            "email": "ksdb@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "1YXU4mEteGkWAUWs"
        },
        {
            "nome": "Usuário Teste",
            "email": "teste0323@teste.com",
            "password": "12345",
            "administrador": "true",
            "_id": "1il4Tb85YUUetf3J"
        },
        {
            "nome": "Usuário Teste",
            "email": "teste4472@teste.com",
            "password": "12345",
            "administrador": "true",
            "_id": "1rWYUpSAV3KMxemx"
        },
        {
            "nome": "Cypress User 1759493962312",
            "email": "Cypress_1759493962312@Cypress.com",
            "password": "123456",
            "administrador": "true",
            "_id": "1ritpWbv5qklmHmq"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fyyy@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "27dM7R0LAm1Z9cGw"
        },
        {
            "nome": "Antônio Moura",
            "email": "maria-sophiacunha@example.net",
            "password": "senha123",
            "administrador": "true",
            "_id": "2JypGp7siJqcCzHL"
        },
        {
            "nome": "Usuario Para Deletar",
            "email": "nvzffefm@qa.com",
            "password": "senhaforte",
            "administrador": "false",
            "_id": "2No1ruWUfM4m4GfI"
        },
        {
            "nome": "Joana Viana",
            "email": "ysiqueira@example.com",
            "password": "senha123",
            "administrador": "true",
            "_id": "2W9sRn4fHGRlVyuW"
        },
        {
            "nome": "Usuario Original",
            "email": "duplicado-digribev@qa.com",
            "password": "senha123",
            "administrador": "false",
            "_id": "2nXGomc5bwBlMeYu"
        },
        {
            "nome": "Fulano da Silva",
            "email": "yavt@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "2rcxYzp77aFSBfRm"
        },
        {
            "nome": "Gustavo Rios",
            "email": "leonardo56@example.net",
            "password": "senha123",
            "administrador": "true",
            "_id": "2wJQtW5XVJwnrc0W"
        },
        {
            "nome": "Usuário Teste",
            "email": "teste5240@teste.com",
            "password": "12345",
            "administrador": "true",
            "_id": "2ztYXXNMO2v8VsXU"
        },
        {
            "nome": "Usuário Teste",
            "email": "teste6184@teste.com",
            "password": "12345",
            "administrador": "true",
            "_id": "3L9BfzDlx1wjaxwA"
        },
        {
            "nome": "Camila Barros",
            "email": "mda-rosa@example.net",
            "password": "senha123",
            "administrador": "true",
            "_id": "44wg0jlqyaCTNf4U"
        },
        {
            "nome": "Usuário Teste",
            "email": "teste6450@teste.com",
            "password": "12345",
            "administrador": "true",
            "_id": "4A3GHkquZblYyu6g"
        },
        {
            "nome": "João Lucas Costela",
            "email": "laiscasa-grande@example.com",
            "password": "senha123",
            "administrador": "true",
            "_id": "4T11JblnEztHDKbu"
        },
        {
            "nome": "Giovanna Teixeira",
            "email": "inovais@example.org",
            "password": "senha123",
            "administrador": "true",
            "_id": "4co0ikZqD6uERbSf"
        },
        {
            "nome": "Cypress Admin 1759493948662",
            "email": "cypress_admin_1759493948662@cypress.com",
            "password": "123456",
            "administrador": "true",
            "_id": "4m9Un54fA126Qj4S"
        },
        {
            "nome": "Usuário Teste",
            "email": "teste1281@teste.com",
            "password": "12345",
            "administrador": "true",
            "_id": "4oVF3Ppgyi0Vh56I"
        },
        {
            "nome": "Maria Fernanda Sá",
            "email": "aragaovalentina@example.org",
            "password": "senha123",
            "administrador": "true",
            "_id": "57NlGGfNA5rgDpbU"
        },
        {
            "nome": "José Peixoto",
            "email": "aylacamara@example.com",
            "password": "senha123",
            "administrador": "true",
            "_id": "5G9fAEsNesUV0H0a"
        },
        {
            "nome": "Erick Castro",
            "email": "heloisa07@example.net",
            "password": "senha123",
            "administrador": "true",
            "_id": "5N7OjnzSVGUeA6va"
        },
        {
            "nome": "Usuario Para Deletar",
            "email": "anlkqsqy@qa.com",
            "password": "senhaforte",
            "administrador": "false",
            "_id": "5jUEeHGzVYDU3ljA"
        },
        {
            "nome": "Anthony Jesus",
            "email": "ramosbenjamin@example.org",
            "password": "senha123",
            "administrador": "true",
            "_id": "5ka9dPeEBkLNpMMc"
        },
        {
            "nome": "Rafael",
            "email": "rafael6@email.com",
            "password": "123456",
            "administrador": "false",
            "_id": "5mn1f2vZs2x9I9E8"
        },
        {
            "nome": "Cypress Admin 1759493949080",
            "email": "cypress_admin_1759493949080@cypress.com",
            "password": "123456",
            "administrador": "true",
            "_id": "5zJzeDKu2ksGQo7D"
        },
        {
            "nome": "Nome Atualizado",
            "email": "teste0876@teste.com",
            "password": "54321",
            "administrador": "true",
            "_id": "6KtI3AtUcdIfXorx"
        },
        {
            "nome": "Murilo Rios",
            "email": "sarah94@example.com",
            "password": "senha123",
            "administrador": "true",
            "_id": "6Q1sN4D8VahxIraM"
        },
        {
            "nome": "Fulano da Silva",
            "email": "opfo@emailteste.com",
            "password": "1234",
            "administrador": "true",
            "_id": "6S8eTGGQPy2wqIkF"
        },
        {
            "nome": "Admin lkmhobgj",
            "email": "admin-lkmhobgj@qa.com",
            "password": "senhaforte",
            "administrador": "true",
            "_id": "6ToKZVAjJYp1vcMS"
        },
        {
            "nome": "Sarah Oliveira",
            "email": "isabela72@example.com",
            "password": "senha123",
            "administrador": "true",
            "_id": "6TooYiAg6WOmNJdc"
        },
        {
            "nome": "Aylla Vieira",
            "email": "alexandrecorreia@example.org",
            "password": "senha123",
            "administrador": "true",
            "_id": "6VAGhehEbBqMsCmd"
        },
        {
            "nome": "Usuario Senha Longa",
            "email": "longpass-dfqfiotd@qa.com",
            "password": "12345678901",
            "administrador": "false",
            "_id": "6bYSrfrK7Z9TFIBK"
        },
        {
            "nome": "Rael Souza",
            "email": "kevinazevedo@example.org",
            "password": "senha123",
            "administrador": "true",
            "_id": "6ocPtQ7MiJ9OuAhy"
        },
        {
            "nome": "Nome Atualizado",
            "email": "teste6201@teste.com",
            "password": "54321",
            "administrador": "true",
            "_id": "6qousF5ZqD5AH2OQ"
        },
        {
            "nome": "Gabrielly Cavalcante",
            "email": "da-luzmaria-julia@example.net",
            "password": "senha123",
            "adm... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20251003 14:36:32.905" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251003 14:36:32.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20251003 14:36:32.134" endtime="20251003 14:36:32.906"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20251003 14:36:32.906" endtime="20251003 14:36:32.907"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_response}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20251003 14:36:32.913" level="INFO">${json_response} = {'quantidade': 381, 'usuarios': [{'nome': 'Usuario Senha Curta', 'email': 'shortpass-mylxstai@qa.com', 'password': '1234', 'administrador': 'false', '_id': '065DhAT0ZHJLsXBY'}, {'nome': 'Usuario Teste...</msg>
<status status="PASS" starttime="20251003 14:36:32.907" endtime="20251003 14:36:32.913"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${json_response}</arg>
<arg>quantidade</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251003 14:36:32.914" endtime="20251003 14:36:32.914"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${json_response}</arg>
<arg>usuarios</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251003 14:36:32.915" endtime="20251003 14:36:32.915"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${primeiro_usuario}</var>
<arg>${json_response['usuarios']}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20251003 14:36:32.917" level="INFO">${primeiro_usuario} = {'nome': 'Usuario Senha Curta', 'email': 'shortpass-mylxstai@qa.com', 'password': '1234', 'administrador': 'false', '_id': '065DhAT0ZHJLsXBY'}</msg>
<status status="PASS" starttime="20251003 14:36:32.915" endtime="20251003 14:36:32.917"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${primeiro_usuario}</arg>
<arg>nome</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251003 14:36:32.917" endtime="20251003 14:36:32.918"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${primeiro_usuario}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251003 14:36:32.918" endtime="20251003 14:36:32.918"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${primeiro_usuario}</arg>
<arg>administrador</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251003 14:36:32.918" endtime="20251003 14:36:32.918"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${primeiro_usuario}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20251003 14:36:32.918" endtime="20251003 14:36:32.919"/>
</kw>
<status status="PASS" starttime="20251003 14:36:32.133" endtime="20251003 14:36:32.919"/>
</kw>
<kw name="Cadastrar novo usuario com sucesso" library="user_keyword">
<kw name="Gerar Email Aleatorio" library="user_keyword">
<var>${email_comum}</var>
<kw name="Generate Random String" library="String">
<var>${random_string}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20251003 14:36:32.919" level="INFO">${random_string} = epgcybte</msg>
<status status="PASS" starttime="20251003 14:36:32.919" endtime="20251003 14:36:32.919"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${email}</var>
<arg>SEPARATOR=</arg>
<arg>teste_robot_${random_string}</arg>
<arg>@qa.com.br</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20251003 14:36:32.920" level="INFO">${email} = teste_robot_epgcybte@qa.com.br</msg>
<status status="PASS" starttime="20251003 14:36:32.920" endtime="20251003 14:36:32.920"/>
</kw>
<msg timestamp="20251003 14:36:32.920" level="INFO">${email_comum} = teste_robot_epgcybte@qa.com.br</msg>
<status status="PASS" starttime="20251003 14:36:32.919" endtime="20251003 14:36:32.920"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${EMAIL_COMUM}</arg>
<arg>${email_comum}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20251003 14:36:32.920" level="INFO">${EMAIL_COMUM} = teste_robot_epgcybte@qa.com.br</msg>
<status status="PASS" starttime="20251003 14:36:32.920" endtime="20251003 14:36:32.920"/>
</kw>
<kw name="Criar Novo Usuario e Salvar ID" library="user_keyword">
<var>${response}</var>
<arg>${USER_COMUM.nome}</arg>
<arg>${email_comum}</arg>
<arg>${USER_COMUM.password}</arg>
<arg>${USER_COMUM.administrador}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20251003 14:36:32.921" level="INFO">${body} = {'nome': 'Usuario Comum', 'email': 'teste_robot_epgcybte@qa.com.br', 'password': 'Teste123', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20251003 14:36:32.921" endtime="20251003 14:36:32.921"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/usuarios</arg>
<arg>json=${body}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20251003 14:36:33.107" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '118', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Usuario Comum", "email": "teste_robot_epgcybte@qa.com.br", "password": "Teste123", "administrador": "false"}' 
 </msg>
<msg timestamp="20251003 14:36:33.107" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '5b88c058731d174677befa35895c97b3', 'date': 'Fri, 03 Oct 2025 17:36:31 GMT', 'server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "uEFPMJfdqDzgQZVs"
} 
 </msg>
<msg timestamp="20251003 14:36:33.107" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251003 14:36:33.107" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20251003 14:36:32.921" endtime="20251003 14:36:33.107"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_id}</var>
<arg>${response.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20251003 14:36:33.108" level="INFO">${user_id} = uEFPMJfdqDzgQZVs</msg>
<status status="PASS" starttime="20251003 14:36:33.107" endtime="20251003 14:36:33.108"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>${user_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20251003 14:36:33.108" level="INFO">${USER_ID} = uEFPMJfdqDzgQZVs</msg>
<status status="PASS" starttime="20251003 14:36:33.108" endtime="20251003 14:36:33.108"/>
</kw>
<msg timestamp="20251003 14:36:33.108" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20251003 14:36:32.920" endtime="20251003 14:36:33.108"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>Cadastro realizado com sucesso</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20251003 14:36:33.108" endtime="20251003 14:36:33.109"/>
</kw>
<status status="PASS" starttime="20251003 14:36:32.919" endtime="20251003 14:36:33.109"/>
</kw>
<kw name="Tentar cadastrar usuario com email duplicado" library="user_keyword">
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>nome=Outro Nome</arg>
<arg>email=${EMAIL_COMUM}</arg>
<arg>password=outrasenha</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20251003 14:36:33.110" level="INFO">${body} = {'nome': 'Outro Nome', 'email': 'teste_robot_epgcybte@qa.com.br', 'password': 'outrasenha', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20251003 14:36:33.109" endtime="20251003 14:36:33.110"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/usuarios</arg>
<arg>json=${body}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20251003 14:36:33.291" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '117', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Outro Nome", "email": "teste_robot_epgcybte@qa.com.br", "password": "outrasenha", "administrador": "false"}' 
 </msg>
<msg timestamp="20251003 14:36:33.291" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '7b20910cd2592a1977befa35895c91d2', 'date': 'Fri, 03 Oct 2025 17:36:31 GMT', 'server': 'Google Frontend', 'Content-Length': '53'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg timestamp="20251003 14:36:33.291" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251003 14:36:33.293" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20251003 14:36:33.110" endtime="20251003 14:36:33.293"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>Este email já está sendo usado</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20251003 14:36:33.293" endtime="20251003 14:36:33.295"/>
</kw>
<status status="PASS" starttime="20251003 14:36:33.109" endtime="20251003 14:36:33.295"/>
</kw>
<kw name="Buscar usuario por ID e validar dados" library="user_keyword">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/usuarios/${USER_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20251003 14:36:33.474" level="INFO">GET Request : url=https://serverest.dev/usuarios/uEFPMJfdqDzgQZVs 
 path_url=/usuarios/uEFPMJfdqDzgQZVs 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20251003 14:36:33.474" level="INFO">GET Response : url=https://serverest.dev/usuarios/uEFPMJfdqDzgQZVs 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '8d6419ce5cf21fb577befa35895c90e5', 'date': 'Fri, 03 Oct 2025 17:36:31 GMT', 'server': 'Google Frontend', 'Content-Length': '167'} 
 body={
    "nome": "Usuario Comum",
    "email": "teste_robot_epgcybte@qa.com.br",
    "password": "Teste123",
    "administrador": "false",
    "_id": "uEFPMJfdqDzgQZVs"
} 
 </msg>
<msg timestamp="20251003 14:36:33.474" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251003 14:36:33.474" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20251003 14:36:33.297" endtime="20251003 14:36:33.474"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20251003 14:36:33.475" endtime="20251003 14:36:33.475"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.json()['nome']}</arg>
<arg>${USER_COMUM.nome}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20251003 14:36:33.475" endtime="20251003 14:36:33.475"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.json()['email']}</arg>
<arg>${EMAIL_COMUM}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20251003 14:36:33.476" endtime="20251003 14:36:33.476"/>
</kw>
<status status="PASS" starttime="20251003 14:36:33.296" endtime="20251003 14:36:33.476"/>
</kw>
<kw name="Editar usuario com sucesso" library="user_keyword">
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>nome=Nome Alterado Robot</arg>
<arg>email=${EMAIL_COMUM}</arg>
<arg>password=senhaalterada</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20251003 14:36:33.477" level="INFO">${body} = {'nome': 'Nome Alterado Robot', 'email': 'teste_robot_epgcybte@qa.com.br', 'password': 'senhaalterada', 'administrador': 'false'}</msg>
<status status="PASS" starttime="20251003 14:36:33.476" endtime="20251003 14:36:33.477"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/usuarios/${USER_ID}</arg>
<arg>json=${body}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20251003 14:36:33.656" level="INFO">PUT Request : url=https://serverest.dev/usuarios/uEFPMJfdqDzgQZVs 
 path_url=/usuarios/uEFPMJfdqDzgQZVs 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '129', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Nome Alterado Robot", "email": "teste_robot_epgcybte@qa.com.br", "password": "senhaalterada", "administrador": "false"}' 
 </msg>
<msg timestamp="20251003 14:36:33.656" level="INFO">PUT Response : url=https://serverest.dev/usuarios/uEFPMJfdqDzgQZVs 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '5c8ce8d415b67c7777befa35895c9125', 'date': 'Fri, 03 Oct 2025 17:36:31 GMT', 'server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20251003 14:36:33.656" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251003 14:36:33.658" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20251003 14:36:33.477" endtime="20251003 14:36:33.658"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20251003 14:36:33.658" endtime="20251003 14:36:33.659"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>Registro alterado com sucesso</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20251003 14:36:33.659" endtime="20251003 14:36:33.661"/>
</kw>
<status status="PASS" starttime="20251003 14:36:33.476" endtime="20251003 14:36:33.661"/>
</kw>
<kw name="Excluir usuario com sucesso" library="user_keyword">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_SESSION}</arg>
<arg>/usuarios/${USER_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20251003 14:36:33.836" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/uEFPMJfdqDzgQZVs 
 path_url=/usuarios/uEFPMJfdqDzgQZVs 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20251003 14:36:33.836" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/uEFPMJfdqDzgQZVs 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '7d975f27256f1b9577befa35895c92d2', 'date': 'Fri, 03 Oct 2025 17:36:31 GMT', 'server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20251003 14:36:33.836" level="INFO">C:\Users\ghepp\AppData\Roaming\Python\Python313\site-packages\urllib3\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20251003 14:36:33.836" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20251003 14:36:33.663" endtime="20251003 14:36:33.836"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20251003 14:36:33.836" endtime="20251003 14:36:33.836"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>Registro excluído com sucesso</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20251003 14:36:33.836" endtime="20251003 14:36:33.837"/>
</kw>
<status status="PASS" starttime="20251003 14:36:33.662" endtime="20251003 14:36:33.837"/>
</kw>
<tag>usuarios</tag>
<status status="PASS" starttime="20251003 14:36:32.132" endtime="20251003 14:36:33.837"/>
</test>
<kw name="Delete All Sessions" library="RequestsLibrary" type="TEARDOWN">
<doc>Removes all the session objects</doc>
<msg timestamp="20251003 14:36:33.838" level="INFO">Deleting All Sessions</msg>
<status status="PASS" starttime="20251003 14:36:33.838" endtime="20251003 14:36:33.839"/>
</kw>
<status status="PASS" starttime="20251003 14:36:31.924" endtime="20251003 14:36:33.839"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">usuarios</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="User Test">User Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
